##########################################################################
# Copyright 2000-2009 DFKI GmbH.
# All Rights Reserved.  Use is subject to license terms.
#
# This file is part of MARY TTS.
#
# MARY TTS is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, version 3 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
##########################################################################
# MARY TTS configuration file.
##########################################################################

name = pt
pt.version = 4.3.0

provides = a-language

requires = \
    marybase \

    pt-voice

###########################################################################
############################## The Modules  ###############################
###########################################################################
# For keys ending in ".list", values will be appended across config files,
# so that .list keys can occur in several config files.
# For all other keys, values will be copied to the global config, so
# keys should be unique across config files.


# Java classes to use as the modules, as a whitespace-separated list.
# These have to implement de.dfki.lt.mary.modules.MaryModule.
# For each input type + output type, only one Module may be listed
# across all components, or an Exception will be thrown.
# No particular order is required -- a processing pipeline from input data type
# to output data type will be computed on-line.

#modules.classes.list = \
#        marytts.modules.JPhonemiser(pt.) \ 
#        marytts.modules.DummyAllophones2AcoustParams 

modules.classes.list = \
        marytts.modules.JPhonemiser(pt.)  \
        marytts.language.pt.JTokeniser \
        marytts.language.pt.Prosody \
        marytts.language.pt.PronunciationModel \
        marytts.modules.OpenNLPPosTagger(pt,pt.pos) \
        marytts.modules.CARTF0Modeller(pt,pt.f0.,marytts.features.FeatureProcessorManager(pt)) \
        marytts.modules.CARTDurationModeller(pt,pt.duration.,marytts.features.FeatureProcessorManager(pt)) \
        marytts.modules.PolynomialF0Modeller(en,english.f0.,marytts.language.pt.features.FeatureProcessorManager) \

####################################################################
####################### Module settings  ###########################
####################################################################

pt.allophoneset = jar:/marytts/language/pt/lexicon/allophones.pt.xml

#pt.userdict = MARY_BASE/user-dictionaries/userdict.txt
pt.lexicon = jar:/marytts/language/pt/lexicon/portuguese.fst
pt.lettertosound = jar:/marytts/language/pt/lexicon/pt.lts

#pt.pos.model = jar:/marytts/language/pt/tagger/pt-pos-maxent.bin
#en.pos.posMap = MARY_BASE/lib/modules/en/tagger/posMap.txt

pt.prosody.paragraphdeclination = true

# rules for prediction of ToBI tones
pt.prosody.tobipredparams = jar:/marytts/language/pt/prosody/tobipredparams_pt.xml
# rules for accent priorities of pos
pt.prosody.accentPriorities = jar:/marytts/language/pt/prosody/POSAccentPriorities.pt.properties

# copy the word accents to the first accented syllable
pt.prosody.syllableaccents = true


# Defines how many units should be selected in cart on backtrace
# The higher the number, the closer synthesis comes to pure unit selection 
pt.cart.backtrace = 500 


# English feature processor manager
	
featuremanager.classes.list = \
	marytts.features.FeatureProcessorManager(pt)
