##########################################################################
# Copyright 2000-2009 DFKI GmbH.
# All Rights Reserved.  Use is subject to license terms.
#
# This file is part of MARY TTS.
#
# MARY TTS is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, version 3 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
##########################################################################
# MARY TTS configuration file.
##########################################################################

name = pt_BR
pt_BR.version = 4.3.0

locale = pt_BR

provides = a-language

requires = \
    marybase \

    pt_BR-voice

###########################################################################
############################## The Modules  ###############################
###########################################################################
# For keys ending in ".list", values will be appended across config files,
# so that .list keys can occur in several config files.
# For all other keys, values will be copied to the global config, so
# keys should be unique across config files.


# Java classes to use as the modules, as a whitespace-separated list.
# These have to implement de.dfki.lt.mary.modules.MaryModule.
# For each input type + output type, only one Module may be listed
# across all components, or an Exception will be thrown.
# No particular order is required -- a processing pipeline from input data type
# to output data type will be computed on-line.

modules.classes.list = \
        marytts.modules.JPhonemiser(pt_BR.)  \
        marytts.language.pt_br.Preprocess \
        marytts.language.pt_br.JTokeniser \
        marytts.language.pt_br.Prosody \
        marytts.language.pt_br.PronunciationModel \
        marytts.modules.OpenNLPPosTagger(pt,pt_BR.pos) \

        marytts.modules.CARTF0Modeller(pt_BR,pt_BR.f0.,marytts.features.FeatureProcessorManager(pt_BR)) \
        marytts.modules.CARTDurationModeller(pt_BR,pt_BR.duration.,marytts.features.FeatureProcessorManager(pt_BR)) \
        marytts.modules.PolynomialF0Modeller(pt,portuguese.f0.,marytts.language.pt.features.FeatureProcessorManager) \

####################################################################
####################### Module settings  ###########################
####################################################################

pt_BR.allophoneset = jar:/marytts/language/pt_br/lexicon/allophones.pt_BR.xml
pt_BR.userdict = MARY_BASE/user-dictionaries/userdict-pt_BR.txt
pt_BR.lexicon = jar:/marytts/language/pt_br/lexicon/pt_BR_lexicon.fst
pt_BR.lettertosound = jar:/marytts/language/pt_br/lexicon/pt_BR.lts

pt_BR.pos.model = jar:/marytts/language/pt_br/tagger/pt-pos-maxent-1.5.bin

pt_BR.prosody.paragraphdeclination = true

# rules for prediction of ToBI tones
pt_BR.prosody.tobipredparams = jar:/marytts/language/pt_br/prosody/tobipredparams_portuguese.xml
# rules for accent priorities of pos
pt_BR.prosody.accentPriorities = jar:/marytts/language/pt_br/prosody/POSAccentPriorities.pt.properties

# copy the word accents to the first accented syllable
pt_BR.prosody.syllableaccents = true

# Defines how many units should be selected in cart on backtrace
# The higher the number, the closer synthesis comes to pure unit selection
pt_BR.cart.backtrace = 500

# Portuguese feature processor manager
featuremanager.classes.list = \
	marytts.features.FeatureProcessorManager(pt_BR)
